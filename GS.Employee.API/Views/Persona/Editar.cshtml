@model GS.Employee.API.Models.Persona

@{
    ViewData["Title"] = "Editar";
}

<div class="offset-3 col-6">
    <h2>Editar Persona</h2>

    <div id="message" role="alert"></div>

    @using (Html.BeginForm())
    {
        <input type="hidden" id="id" value="@Model.Id" />
        <input type="hidden" id="deleteUrl" value="@Url.Action("Eliminar")" />
        <input type="hidden" id="listUrl" value="@Url.Action("Index", "Persona")" />

        <div class="mb-3">
            <label for="nombres" class="form-label">Nombres:</label>
            <input type="text" id="nombres" name="nombres" class="form-control" value="@Model.Nombres" required>
        </div>

        <div class="mb-3">
            <label for="apellidoPaterno" class="form-label">Apellido Paterno:</label>
            <input type="text" id="apellidoPaterno" name="apellidoPaterno" class="form-control" value="@Model.ApellidoPaterno" required>
        </div>

        <div class="mb-3">
            <label for="apellidoMaterno" class="form-label">Apellido Materno:</label>
            <input type="text" id="apellidoMaterno" name="apellidoMaterno" class="form-control" value="@Model.ApellidoMaterno" required>
        </div>

        <div class="mb-3">
            <label for="fechaNacimiento" class="form-label">Fecha de Nacimiento:</label>
            <input type="date" id="fechaNacimiento" name="fechaNacimiento" class="form-control" value="@Model.FechaNacimiento.ToString("yyyy-MM-dd")" required>
        </div>

        <div class="mb-3">
            <label for="nivelEducativo" class="form-label">Nivel Educativo:</label>
            <input type="text" id="nivelEducativo" name="nivelEducativo" class="form-control" value="@Model.NivelEducativo" required>
        </div>

        <div class="mb-3">
            <label for="numeroCelular" class="form-label">Número de Celular:</label>
            <input type="tel" id="numeroCelular" name="numeroCelular" class="form-control" value="@Model.NumeroCelular" required>
        </div>

        <div class="mb-3">
            @if (Model.Estatus)
            {
                <input type="checkbox" class="form-check-input" id="estatus" name="estatus" checked="checked">
            }
            else {
                <input type="checkbox" class="form-check-input" id="estatus" name="estatus">
            }
            <label class="form-check-label" for="estatus">Estatus</label>
        </div>

        <div class="mb-3">
            <button type="button" id="btnDelete" class="btn btn-outline-danger">Eliminar</button>
            <button type="submit" class="btn btn-primary">Actualizar</button>
        </div>

    }
    <div>
        <a href="@Url.Action("Index")" class="mb-3"> Regresar al inicio</a>
    </div>
</div>


@section Scripts {
    <script asp-append-version="true">
        (() => {
            const components = () => {
                return {
                    form: document.getElementsByTagName('form')[0],
                    btnEliminar: document.getElementById('btnDelete'),
                    listUrl: document.getElementById('listUrl').value,
                    deleteUrl: document.getElementById('deleteUrl').value,
                    id: document.getElementById('id').value,
                    estatus: document.getElementById('estatus').checked,
                    nombres: document.getElementById('nombres').value,
                    apellidoPaterno: document.getElementById('apellidoPaterno').value,
                    apellidoMaterno: document.getElementById('apellidoMaterno').value,
                    fechaNacimiento: document.getElementById('fechaNacimiento').value,
                    nivelEducativo: document.getElementById('nivelEducativo').value,
                    numeroCelular: document.getElementById('numeroCelular').value,
                    messages: document.getElementById('message')
                }
            }

            const { form, btnEliminar, deleteUrl } = components();

            form.addEventListener('submit', async (e) => {

                e.preventDefault();

                const { apellidoMaterno, apellidoPaterno, fechaNacimiento, nivelEducativo, nombres, numeroCelular, messages, id, estatus } = components();
                const requestData = {
                    id,
                    estatus,
                    nombres,
                    apellidoPaterno,
                    apellidoMaterno,
                    fechaNacimiento,
                    nivelEducativo,
                    numeroCelular,
                }

                const requestHeaders = new Headers();

                requestHeaders.append('Accept', 'application/json');
                requestHeaders.append('Content-Type', 'application/json');

                const fetchResponse = await fetch(form.action, { method: 'POST', body: JSON.stringify(requestData), headers: requestHeaders });
                const textResponse = await fetchResponse.json();
                const { message, success } = textResponse;

                messages.setAttribute('class', success ? 'alert alert-success' : 'alert alert-danger');
                messages.innerText = message;
            });

            btnEliminar.addEventListener('click', async (e) => {

                e.preventDefault();

                const deleteItem = confirm('Estas seguro que deseas eliminar el registro?');

                if(!deleteItem){
                    return;
                }
                const { id, messages, listUrl } = components();
                const url = `${deleteUrl}/${id}`;

                const fetchResponse = await fetch(url, { method: 'DELETE' });
                const textResponse = await fetchResponse.json();
                const { message, success } = textResponse;

                messages.setAttribute('class', success ? 'alert alert-success' : 'alert alert-danger');
                messages.innerText = message;

                if(success){
                    setTimeout(() => {
                        window.location.href = listUrl;
                    }, 2000);
                }
            });
        })();
    </script>
}
