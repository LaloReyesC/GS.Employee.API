@model Persona

@{
    ViewData["Title"] = "Crear persona";
}

<div class="offset-3 col-6">
    <h2>Crear Persona</h2>

    <div id="message" role="alert"></div>

    @using (Html.BeginForm())
    {
        <div class="mb-3">
            <label for="nombres" class="form-label">Nombres:</label>
            <input type="text" id="nombres" name="nombres" class="form-control" required>
        </div>

        <div class="mb-3">
            <label for="apellidoPaterno" class="form-label">Apellido Paterno:</label>
            <input type="text" id="apellidoPaterno" name="apellidoPaterno" class="form-control" required>
        </div>

        <div class="mb-3">
            <label for="apellidoMaterno" class="form-label">Apellido Materno:</label>
            <input type="text" id="apellidoMaterno" name="apellidoMaterno" class="form-control" required>
        </div>

        <div class="mb-3">
            <label for="fechaNacimiento" class="form-label">Fecha de Nacimiento:</label>
            <input type="date" id="fechaNacimiento" name="fechaNacimiento" class="form-control" required>
        </div>

        <div class="mb-3">
            <label for="nivelEducativo" class="form-label">Nivel Educativo:</label>
            <input type="text" id="nivelEducativo" name="nivelEducativo" class="form-control" required>
        </div>

        <div class="mb-3">
            <label for="numeroCelular" class="form-label">Número de Celular:</label>
            <input type="tel" id="numeroCelular" name="numeroCelular" class="form-control" required>
        </div>

        <div class="mb-3">
            <button type="submit" class="btn btn-primary">Guardar</button>
        </div>

    }

    <div>
        <a href="@Url.Action("Index")" class="mb-3"> Regresar al inicio</a>
    </div>
</div>

@section Scripts {
    <script asp-append-version="true">
        (() => {
            const components = () => {
                return {
                    form: document.getElementsByTagName('form')[0],
                    nombres: document.getElementById('nombres').value,
                    apellidoPaterno: document.getElementById('apellidoPaterno').value,
                    apellidoMaterno: document.getElementById('apellidoMaterno').value,
                    fechaNacimiento: document.getElementById('fechaNacimiento').value,
                    nivelEducativo: document.getElementById('nivelEducativo').value,
                    numeroCelular: document.getElementById('numeroCelular').value,
                    messages: document.getElementById('message')
                }
            }

            const { form } = components();

            form.addEventListener('submit', async (e) => {

                e.preventDefault();

                const { apellidoMaterno, apellidoPaterno, fechaNacimiento, nivelEducativo, nombres, numeroCelular, messages } = components();
                const requestData = {
                    Nombres: nombres,
                    ApellidoPaterno: apellidoPaterno,
                    ApellidoMaterno: apellidoMaterno,
                    FechaNacimiento: fechaNacimiento,
                    NivelEducativo: nivelEducativo,
                    NumeroCelular: numeroCelular,
                }

                const requestHeaders = new Headers();

                requestHeaders.append('Accept', 'application/json');
                requestHeaders.append('Content-Type', 'application/json');

                const fetchResponse = await fetch(form.action, { method: 'POST', body: JSON.stringify(requestData), headers: requestHeaders });
                const textResponse = await fetchResponse.json();
                const { message, success } = textResponse;

                messages.setAttribute('class', success ? 'alert alert-success' : 'alert alert-danger');
                messages.innerText = message;
            });
        })();
    </script>
}